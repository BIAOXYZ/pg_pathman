\set VERBOSITY terse
CREATE EXTENSION pg_pathman;
CREATE TABLE abc (id SERIAL);
CREATE TABLE xxx (id SERIAL, abc_id INT);
/* Cannot create FK if PK table isn't partitioned by pg_pathman */
SELECT create_foreign_key('xxx', 'abc_id', 'abc');
ERROR:  table abc isn't partitioned by pg_pathman
/* Cannot create FK if there are no unique indexes */
SELECT create_range_partitions('abc', 'id', 1, 100, 3);
 create_range_partitions 
-------------------------
                       3
(1 row)

SELECT create_foreign_key('xxx', 'abc_id', 'abc');
ERROR:  there is no unique constraint matching given keys for referenced table "abc"
/* Create index on parent but not on partitions. Expect an error */
CREATE UNIQUE INDEX on abc(id);
SELECT create_foreign_key('xxx', 'abc_id', 'abc');
ERROR:  there is no unique constraint for partition "abc_1"
/* Recreate partitioning setup with unique indexes */
SELECT drop_partitions('abc');
NOTICE:  0 rows copied from abc_1
NOTICE:  0 rows copied from abc_2
NOTICE:  0 rows copied from abc_3
 drop_partitions 
-----------------
               3
(1 row)

CREATE UNIQUE INDEX on abc(id);
SELECT create_range_partitions('abc', 'id', 1, 100, 3);
 create_range_partitions 
-------------------------
                       3
(1 row)

/* Existing row should violate FK constraint */
INSERT INTO xxx (abc_id) VALUES (1);
SELECT create_foreign_key('xxx', 'abc_id', 'abc');
ERROR:  insert or update on table "xxx" violates foreign key constraint "xxx_abc_id_fkey"
/* Expect successful execution */
DELETE FROM xxx;
SELECT create_foreign_key('xxx', 'abc_id', 'abc');
 create_foreign_key 
--------------------
 
(1 row)

/* PK violation */
INSERT INTO xxx (id, abc_id) VALUES (100, 1);
ERROR:  insert or update on table "xxx" violates foreign key constraint "xxx_abc_id_fkey"
/* No violation */
INSERT INTO abc VALUES (1);
INSERT INTO xxx (id, abc_id) VALUES (100, 1);
/* Restrict an update of FK table */
UPDATE xxx SET abc_id=2 WHERE id=100;
ERROR:  insert or update on table "xxx" violates foreign key constraint "xxx_abc_id_fkey"
/* No restriction */
INSERT INTO abc VALUES (2);
UPDATE xxx SET abc_id=2 WHERE id=100;
/* Restrict an update or delete on PK table */
UPDATE abc SET id = 3 WHERE id = 2;
ERROR:  update or delete on table "abc_1" violates foreign key constraint "xxx_abc_id_fkey" on table "xxx"
DELETE FROM abc WHERE id = 2;
ERROR:  update or delete on table "abc_1" violates foreign key constraint "xxx_abc_id_fkey" on table "xxx"
/* Unique indexes cannot be dropped */
DROP INDEX abc_1_id_idx;
ERROR:  cannot drop index abc_1_id_idx because other objects depend on it
/* Add partition */
SELECT append_range_partition('abc');
 append_range_partition 
------------------------
 abc_4
(1 row)

INSERT INTO abc VALUES (350);
INSERT INTO xxx (abc_id) VALUES (350);
/* Partition cannot be dropped or detached unless there are references from FK table */
DROP TABLE abc_4;
ERROR:  update or delete on table "abc_4" violates foreign key constraint "xxx_abc_id_fkey" on table "xxx"
SELECT detach_range_partition('abc_4');
ERROR:  update or delete on table "abc_4" violates foreign key constraint "xxx_abc_id_fkey" on table "xxx"
/* Successful partition drop */
DELETE FROM xxx WHERE abc_id = 350;
DROP TABLE abc_4;
/* Quick check for essential pg_pathman's functions */
SELECT merge_range_partitions('abc_2', 'abc_3');
 merge_range_partitions 
------------------------
 
(1 row)

SELECT split_range_partition('abc_2', 200);
 split_range_partition 
-----------------------
 abc_5
(1 row)

SELECT add_range_partition('abc', 301, 401, 'abc_x');
 add_range_partition 
---------------------
 abc_x
(1 row)

/* Check replace_hash_partition() func */
ALTER TABLE xxx DROP CONSTRAINT xxx_abc_id_fkey;
DELETE FROM xxx;
SELECT drop_partitions('abc', true);
 drop_partitions 
-----------------
               4
(1 row)

SELECT create_hash_partitions('abc', 'id', 3);
 create_hash_partitions 
------------------------
                      3
(1 row)

SELECT create_foreign_key('xxx', 'abc_id', 'abc');
 create_foreign_key 
--------------------
 
(1 row)

INSERT INTO abc SELECT generate_series(1, 10);
INSERT INTO xxx (abc_id) SELECT generate_series(1, 10);
CREATE TABLE abc_x (LIKE abc INCLUDING ALL);
SELECT replace_hash_partition('abc_1', 'abc_x');
ERROR:  update or delete on table "abc_1" violates foreign key constraint "xxx_abc_id_fkey" on table "xxx"
DROP EXTENSION pg_pathman CASCADE;
NOTICE:  drop cascades to 4 other objects
