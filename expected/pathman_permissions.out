\set VERBOSITY terse
CREATE EXTENSION pg_pathman;
CREATE ROLE user1 LOGIN;
CREATE ROLE user2 LOGIN;
SET ROLE user1;
CREATE TABLE user1_table(id serial, a int);
INSERT INTO user1_table SELECT g, g FROM generate_series(1, 20) as g;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO public;
SET ROLE user2;
/* Not owner and not superuser cannot create partitions */
SELECT create_range_partitions('user1_table', 'id', 1, 10, 2);
ERROR:  permission denied for relation user1_table
SET ROLE user1;
/* Owner can */
SELECT create_range_partitions('user1_table', 'id', 1, 10, 2);
NOTICE:  sequence "user1_table_seq" does not exist, skipping
 create_range_partitions 
-------------------------
                       2
(1 row)

SET ROLE user2;
/* Try to change partitioning parameters for user1_table */
SELECT set_enable_parent('user1_table', true);
ERROR:  only the owner or superuser can change partitioning configuration of table "user1_table"
SELECT set_auto('user1_table', false);
ERROR:  only the owner or superuser can change partitioning configuration of table "user1_table"
/*
 * Check that user is able to propagate partitions by inserting rows that
 * doesn't fit into range
 */
INSERT INTO user1_table (id, a) VALUES (25, 0);
ERROR:  permission denied for relation user1_table
SET ROLE user1;
SELECT drop_partitions('test1_table');
ERROR:  relation "test1_table" does not exist at character 24
SET ROLE user2;
/* Test ddl event trigger */
CREATE TABLE user2_table(id serial);
SELECT create_hash_partitions('user2_table', 'id', 3);
 create_hash_partitions 
------------------------
                      3
(1 row)

INSERT INTO user2_table SELECT generate_series(1, 30);
SELECT drop_partitions('user2_table');
NOTICE:  function public.user2_table_upd_trig_func() does not exist, skipping
NOTICE:  9 rows copied from user2_table_0
NOTICE:  11 rows copied from user2_table_1
NOTICE:  10 rows copied from user2_table_2
 drop_partitions 
-----------------
               3
(1 row)

RESET ROLE;
DROP OWNED BY user1;
DROP OWNED BY user2;
DROP USER user1;
DROP USER user2;
