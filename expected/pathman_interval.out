\set VERBOSITY terse
CREATE EXTENSION pg_pathman;
/* Range partitions for INTEGER type */
CREATE TABLE abc (id SERIAL);
SELECT create_range_partitions('abc', 'id', 0, 100, 2);
 create_range_partitions 
-------------------------
                       2
(1 row)

SELECT set_interval('abc', NULL::INTEGER);
 set_interval 
--------------
 
(1 row)

/* pg_pathman shouldn't be able to create a new partition */
INSERT INTO abc VALUES (250);
ERROR:  could not create new partitions for relation "abc"
/* Set a trivial interval */
SELECT set_interval('abc', 0);
ERROR:  interval must not be trivial
/* We also shouldn't be able to set a trivial interval directly in pathman_config table */
UPDATE pathman_config SET range_interval = '0' WHERE partrel = 'abc'::REGCLASS;
ERROR:  interval must not be trivial
/* Set a normal interval */
SELECT set_interval('abc', 1000);
 set_interval 
--------------
 
(1 row)

INSERT INTO abc VALUES (250);
SELECT * FROM pathman_config;
 partrel | attname | parttype | range_interval 
---------+---------+----------+----------------
 abc     | id      |        2 | 1000
(1 row)

DROP TABLE abc cascade;
NOTICE:  drop cascades to 3 other objects
/* Range partitions for DATE type */
CREATE TABLE abc (dt DATE NOT NULL);
SELECT create_range_partitions('abc', 'dt', '2016-01-01'::DATE, '1 day'::INTERVAL, 2);
 create_range_partitions 
-------------------------
                       2
(1 row)

SELECT set_interval('abc', NULL::INTERVAL);
 set_interval 
--------------
 
(1 row)

/* Set a trivial interval */
SELECT set_interval('abc', '1 second'::INTERVAL);
ERROR:  interval must not be trivial
/* Set a normal interval */
SELECT set_interval('abc', '1 month'::INTERVAL);
 set_interval 
--------------
 
(1 row)

SELECT * FROM pathman_config;
 partrel | attname | parttype | range_interval 
---------+---------+----------+----------------
 abc     | dt      |        2 | @ 1 mon
(1 row)

DROP TABLE abc cascade;
NOTICE:  drop cascades to 2 other objects
/* Hash partitioned table shouldn't accept any interval value */
CREATE TABLE abc (id SERIAL);
SELECT create_hash_partitions('abc', 'id', 3);
 create_hash_partitions 
------------------------
                      3
(1 row)

SELECT set_interval('abc', 100);
ERROR:  table "abc" is not partitioned by RANGE
SELECT set_interval('abc', NULL::INTEGER);
ERROR:  table "abc" is not partitioned by RANGE
DROP TABLE abc cascade;
NOTICE:  drop cascades to 3 other objects
DROP EXTENSION pg_pathman;
